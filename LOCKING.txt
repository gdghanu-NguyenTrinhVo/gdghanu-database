***LOCKING***
- Locking là quá trình khóa một tài nguyên(bảng, hàng, hoặc một phần dữ liệu) ngăn các giao dịch khác truy cập hoặc chỉnh sửa đổi tài nguyên  đó cùng lúc.
- Khi dữ liệu bị khóa -> một database session khác KHÔNG thể cập nhật dữ liệu đó cho đến khi khóa được giải phóng (mở khoá dữ liệu và cho phép database user khác cập nhật dữ liệu đó. 
- Khóa thường được mở bởi câu lệnh ROLLBACK hoặc COMMIT trong SQL.

- Database lock thực tế có thể được thực hiện ở nhiều cấp độ khác nhau - còn được biết đến như là lock granularity - bên trong cơ sở dữ liệu.

- Khóa cấp cơ sở dữ liệu(Database level locking):
   +) Toàn bộ cơ sở dữ liệu bị khóa -> chỉ một database session có thể áp dụng bất kỳ cập nhật nào cho cơ sở dữ liệu
   +) Không thường được sử dụng, vì rõ ràng nó ngăn tất cả người dùng ngoại trừ một người cập nhật bất cứ điều gì trong cơ sở dữ liệu. 
   +) Ưu điểm: khi cần một số cập nhật hỗ trợ chính - như nâng cấp cơ sở dữ liệu lên phiên bản mới của phần mềm.

- Khoá cấp tệp tin (file level locking):
   +) Toàn bộ một database file bị lock.
   +) Database file có thể là một khoảng rộng dữ liệu - bên trong một file có thể là cả một bảng, một phần của bảng, hoặc nhiều phần của các bảng khác nhau. 
   +) Vì có sự đa dạng trong dữ liệu được lưu trong một file, cấp độ khoá này không được nhiều người sử dụng.

- Khóa cấp bảng(table level locking):
   +) Toàn bộ bảng bị khóa toàn bộ.
   +) Có ích khi thực hiện thay đổi ảnh hưởng đến toàn bộ bảng, như cập nhật tất cả các hàng trong bảng hoặc điều chỉnh bảng - về cơ bản là các câu lệnh sửa đổi toàn bộ bảng bằng cách này hay cách khác.

- Khóa cấp trang (page or block level locking):
   +) Khoá cấp độ trang hoặc khối xảy ra khi một khối hoặc trang là một phần của tệp cơ sở dữ liệu bị khóa.
   +) Bởi vì dữ liệu có thể được lưu trữ trong các khối / trang có thể rộng và đa dạng, khóa trang / khối ít được ưa chuộng trong cơ sở dữ liệu ngày nay.

- Khóa cấp độ cột (column level locking):
   +) Một số cột trong một hàng nhất định trong một bảng đã cho bị khóa.
   +) Hình thức khóa này không được sử dụng phổ biến vì nó đòi hỏi nhiều tài nguyên để kích hoạt và giải phóng các khóa ở cấp độ này.

-Khóa cấp độ hàng(row level locking):
   +) 

- Khi dữ liệu bị xóa hoặc cập nhật locking luôn được sử dụng - ngay cả khi người dùng cơ sở dữ liệu không viết SQL của mình để nói rõ ràng rằng khóa phải được sử dụng.
- khóa cơ sở dữ liệu là để ngăn chặn việc mất dữ liệu có thể xảy ra nếu cập nhật được áp dụng đồng thời.
- Nếu hai người dùng cơ sở dữ liệu khác nhau được phép cập nhật cùng một dữ liệu. vào cùng một thời điểm chính xác, khi đó kết quả có thể gây nhầm lẫn -> dữ liệu bị khóa, thì vấn đề đó sẽ không phát sinh, vì mỗi lần chỉ có một người dùng có thể cập nhật dữ liệu bị khóa.

- Tranh chấp khoá: vì có khóa trên dữ liệu, các sessions tồn tại cùng lúc (sessions đồng thời) về cơ bản cạnh tranh để có quyền áp dụng các cập nhật trên cùng một dữ liệu, bởi vì dữ liệu đó có thể bị khóa bởi bất kỳ session nào.

- Trong trường hợp tốt nhất, sự tranh chấp khóa có nghĩa là một số user process chạy chậm hơn vì session đang chờ khóa. Trong trường hợp xấu nhất, việc các sessions cạnh tranh để khóa có thể tạo ra việc đình trệ cho nhiều sessions trong một khoảng thời gian không xác định.

- Khi các phiên bị đình trệ trong một khoảng thời gian không xác định, được gọi là deadlock.

- Deadlock là hiện tượng tranh chấp tài nguyên giữa hai hay nhiều lệnh trong đó lệnh này giữ tài nguyên mà lệnh kia cần dẫn tới việc không lệnh nào có thể kết thúc để giải phóng tài nguyên.

- Nếu không được xử lý sẽ dẫn đến hiện tượng các câu lệnh sẽ chờ nhau và không 1 tiến trình nào sẽ được thực hiện tiếp.

- 